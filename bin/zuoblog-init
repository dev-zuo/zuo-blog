#!/usr/bin/env node

// 执行zuoblog init时会先执行 zuoblog 通过commander可以自动再执行当前文件
// console.log('this is zuoblog init')

// 读取当前目录的src目录，notes目录，开始转换
const ZUOBlog = require('../vendor/ZUOBlog')
const zuoblog = new ZUOBlog()

// 最开始zuoblog调用一个函数就可以直接生成静态文件，但考虑到 主题 可扩展性，
// 改为两步来操作：1.先将元数据准备好 2.根据 主题 渲染元数据
const init = async () => {
  try {
    /**
     * 1.获取元数据
     * @param { Object } category 分类信息
     * @param { Array } fileData 所有文件列表信息
     * @param { Number } count 有效 md 文件数量
     * @param { Object } config 全局配置
     * @param { Array } validFileList 有效 md 文件列表
     * @param { Array } invalidConfigFileList 无效文件名(非 md 或隐藏文件) - 文件列表
     * @param { Array } invalidNameFileList 无效配置 - 文件列表
     */
    let notesData = await zuoblog.getNotesData()

    // 2. 根据默认主题渲染页面
    const DefaultDraft = require('../vendor/draft/DefaultDraft')
    const defaultDraft = new DefaultDraft()
    defaultDraft.init(notesData) // 根据默认主题生成静态博客系统

    // 增强 - dev server
    const DevServer = require('../vendor/devServer/index')
    const devServer = new DevServer()
    devServer.start()
  } catch (e) {
    console.log(e)
  }
}

init()